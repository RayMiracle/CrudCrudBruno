name: Bruno API Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  api-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Bruno CLI
      run: npm install -g @usebruno/cli
    
    - name: Verify Bruno CLI installation
      run: bru --version
    
    - name: Run Bruno tests
      run: |
        cd UnicornFarm
        bru run --env Test --reporter-html TestReport.html
      continue-on-error: true
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bruno-test-results
        path: UnicornFarm/TestReport.html
        retention-days: 30
    
    - name: Upload test results to GitHub Pages (optional)
      if: always() && github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: UnicornFarm
        publish_branch: gh-pages
        destination_dir: test-reports
        keep_files: true
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'UnicornFarm/TestReport.html';
          
          let comment = '## üß™ Bruno API Test Results\n\n';
          
          if (fs.existsSync(path)) {
            comment += '‚úÖ Tests completed successfully!\n\n';
            comment += 'üìä [View detailed HTML report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n';
            comment += 'üìÅ Test report artifact has been uploaded and will be available for 30 days.';
          } else {
            comment += '‚ùå Tests failed or report not generated.\n\n';
            comment += 'üîç Check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
